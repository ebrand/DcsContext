@{ ViewBag.Title = "Force-Directed Graph"; }
@section css {
	<style>
		.node {
			stroke: #fff;
			stroke-width: 2px;
		}
		.link {
			stroke: #999;
			stroke-opacity: .6;
		}
		div.node-title {
			color: #000;
			font-family: monospace;
			font-size: 9px;
		}
	</style>
}
@section scripts {
	@{
		<script src="http://d3js.org/d3.v3.min.js" charset="utf-8"></script>
		<script>
			var width = 1600,
				height = 900;

			var color = d3.scale.category10();

			var force = d3.layout.force()
				.charge(-1000)
				.linkDistance(300)
				.size([width, height])
				.gravity(1);

			var svg = d3.select("body").append("svg")
				.attr("width", width)
				.attr("height", height);

			d3.json("/data/experience_apps_d3.json", function(error, graph) {
				if (error) throw error;

				force
					.nodes(graph.nodes)
					.links(graph.links)
					.start();

				var link = svg.selectAll(".link")
					.data(graph.links)
					.enter().append("line")
					.attr("class", "link")
					.style("stroke-width", function(d) { return Math.sqrt(d.weight); });

				var node = svg.selectAll(".node")
					.data(graph.nodes)
					.enter().append("circle")
						.attr("class", "node")
						.attr("r", function(d) { return d.size; })
						.style("fill", function (d) { return color(d.layer); })
						.call(force.drag);

				node.append("div")
					.attr("class", "node-title")
					.text(function (d) { return d.name; });

				node.append("title")
					.text(function(d) { return d.name; });

				force.on("tick", function() {
					link.attr("x1", function(d) { return d.source.x; })
						.attr("y1", function(d) { return d.source.y; })
						.attr("x2", function(d) { return d.target.x; })
						.attr("y2", function(d) { return d.target.y; });

					node.attr("cx", function(d) { return d.x; })
						.attr("cy", function(d) { return d.y; });
				});
			});

		</script>
	}
}
